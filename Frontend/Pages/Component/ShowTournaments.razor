@using Frontend.DTO
@using Frontend.Pages.Component
<h1>Tournaments</h1>
<p>Click on a title to see more information</p>
@if (tournamentList != null)
{
    <div>
    @foreach (var t in tournamentList)
    {
        <div>
            <div @onclick="(() => SendTournament(t.Id))">
                <h2>
                    @t.Title (@t.NumberOfConsestants)
                    @if (t.IsCompleted)
                    {
                        <b>Done</b>
                    }
                    else
                    {
                        <b>Ongoing</b>
                        <button @onclick="(() =>CheckTournament(t.Id))">Continue Tournament</button>
                    }
                </h2>
                @if (t.IsCompleted)
                {
                    <p>
                    <b>@t.EndDate</b><br />
                    @*<b>Winner:</b> @t.Matches.OrderByDescending(x=>x.TId).First().Result.Winner.Name*@
                     </p>

                }
            </div>
            
        </div>
    }
    </div>
}

@code {
    [Parameter]
    public List<TournamentMiniDTO> tournamentList { get; set; }
    [Parameter]
    public EventCallback<int> onShowTournament {get;set;}
    [Parameter]
    public EventCallback<int> onCheckTournament { get; set; }

    public async Task SendTournament(int id)
    {
        await onShowTournament.InvokeAsync(id);
    }

    public async Task CheckTournament(int id)
        => await onCheckTournament.InvokeAsync(id);

}
